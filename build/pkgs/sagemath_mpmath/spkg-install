#!/usr/bin/env bash
# From sage-spkg.
# For type=script packages, the build rule in build/make/Makefile sources
# sage-env but not sage-dist-helpers.
lib="$SAGE_ROOT/build/bin/sage-dist-helpers"
source "$lib"
if [ $? -ne 0 ]; then
    echo >&2 "Error: failed to source $lib"
    echo >&2 "Is $SAGE_ROOT the correct SAGE_ROOT?"
    exit 1
fi
cd src

rm -rf build *.egg_info

export PIP_NO_INDEX=true
export PIP_FIND_LINKS="file://$SAGE_DISTFILES"
vendoring sync

export PIP_FIND_LINKS="file://$SAGE_SPKG_WHEELS"

# First build the sdist, then build the wheel from the sdist.
# https://pypa-build.readthedocs.io/en/latest/#python--m-build
DIST_DIR="$(mktemp -d)"
python3 -m build --outdir "$DIST_DIR"/dist . || sdh_die "Failure building sdist and wheel"

if [ "$SAGE_EDITABLE" = yes ]; then
    # SAGE_ROOT/src/setup.py installs everything, nothing to install
    wheel=$(cd "$DIST_DIR" && sdh_store_wheel . >&2 && echo $wheel)
else
    if [ "$SAGE_WHEELS" = yes ]; then
        # Modularized install via wheels
        wheel=$(cd "$DIST_DIR" && sdh_store_and_pip_install_wheel . && echo $wheel)
    else
        # Legacy direct installation
        wheel=$(cd "$DIST_DIR" && sdh_store_wheel . >&2 && echo $wheel)
    fi
fi

ls -l "$wheel"

if [ "$SAGE_CHECK" != no ]; then
    export TOX_PARALLEL_NO_SPINNER=1
    (set -x; tox -r -p auto -v --installpkg $wheel) && (ls -l $(pwd)/.tox/sagepython-sagewheels-nopypi-norequirements*/log/*-command*.log; :)
fi
