name: Build documentation

on:
  pull_request:
  merge_group:
  push:
    branches:
      - master
      - develop
  workflow_dispatch:
    # Allow to run manually
    inputs:
      platform:
        description: 'Platform'
        required: true
        default: 'ubuntu-focal-standard'
      docker_tag:
        description: 'Docker tag'
        required: true
        default: 'dev'

concurrency:
  # Cancel previous runs of this workflow for the same branch
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Same as in build.yml
  TOX_ENV:                "docker-${{ github.event.inputs.platform || 'ubuntu-focal-standard' }}-incremental"
  BUILD_IMAGE:            "localhost:5000/${{ github.repository }}/sage-${{ github.event.inputs.platform || 'ubuntu-focal-standard' }}-with-targets:ci"
  FROM_DOCKER_REPOSITORY: "ghcr.io/sagemath/sage/"
  FROM_DOCKER_TARGET:     "with-targets"
  FROM_DOCKER_TAG:        ${{ github.event.inputs.docker_tag || 'dev'}}
  EXTRA_CONFIGURE_ARGS:   --enable-fat-binary

jobs:
  build-docs:
    runs-on: ubuntu-latest
    services:
      # https://docs.docker.com/build/ci/github-actions/local-registry/
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Maximize build disk space
        uses: easimon/maximize-build-space@v8
        with:
          # need space in /var for Docker images
          root-reserve-mb:      40000
          remove-dotnet:        true
          remove-android:       true
          remove-haskell:       true
          remove-codeql:        true
          remove-docker-images: true
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install test prerequisites
        # From docker.yml
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install tox
          sudo apt-get clean
          df -h
      - name: Merge CI fixes from sagemath/sage
        run: |
          .ci/merge-fixes.sh
        env:
          GH_TOKEN: ${{ github.token }}

      # Building

      - name: Generate Dockerfile
        # From docker.yml
        run: |
          tox -e ${{ env.TOX_ENV }}
          cp .tox/${{ env.TOX_ENV }}/Dockerfile .
        env:
          # Only generate the Dockerfile, do not run 'docker build' here
          DOCKER_TARGETS: ""

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Build Docker image
        id: image
        uses: docker/build-push-action@v5
        with:
          # push and load may not be set together at the moment
          push:       true
          load:       false
          context:    .
          tags:       ${{ env.BUILD_IMAGE }}
          target:     with-targets
          cache-from: type=gha
          cache-to:   type=gha,mode=max
          build-args: |
            NUMPROC=4
            USE_MAKEFLAGS=-k V=0 SAGE_NUM_THREADS=3 --output-sync=recurse
            TARGETS_PRE=build/make/Makefile
            TARGETS=ci-build-with-fallback

      - name: Start container
        run: |
          docker run --name BUILD -dit \
                     --mount type=bind,src=$(pwd),dst=$(pwd) \
                     --workdir $(pwd) \
                     ${{ env.BUILD_IMAGE }} /bin/sh

      # Docs

      - name: Store old docs
        id: worktree
        run: |
          git config --global --add safe.directory $(pwd)
          git config --global user.email "ci-sage@example.com"
          git config --global user.name "Build documentation workflow"
          # mathjax path in old doc (regex)
          mathjax_path_from="[-./A-Za-z_]*/tex-chtml[.]js"
          # mathjax path in new doc
          mathjax_path_to=$(docker exec -e SAGE_USE_CDNS=yes BUILD /sage/sage -python -c "from sage_docbuild.conf import mathjax_path; print(mathjax_path)")
          new_version=$(docker exec BUILD cat src/VERSION.txt)
          mkdir -p docs/
          docker cp BUILD:/sage/local/share/doc/sage/html docs/
          # Wipe out chronic diffs between old doc and new doc
          (cd docs && \
           find . -name "*.html" | xargs sed -i -e '/class="sidebar-brand-text"/ s/Sage [0-9a-z.]* /Sage '"$new_version"' /' \
                                                -e 's;'"$mathjax_path_from"';'"$mathjax_path_to"';' \
                                                -e '\;<script type="application/vnd\.jupyter\.widget-state+json">;,\;</script>; d')
          # Create git repo from old doc
          (cd docs && \
           git init && \
           (echo "*.svg binary"; echo "*.pdf binary") >> .gitattributes && \
           (echo ".buildinfo"; echo '*.inv'; echo '.git*'; echo '*.svg'; echo '*.pdf'; echo '*.png'; echo 'searchindex.js') > .gitignore; \
           git add -A && git commit --quiet -m "old")

      - name: Build docs
        id: docbuild
        # Always non-incremental because of the concern that
        # incremental docbuild may introduce broken links (inter-file references) though build succeeds
        run: |
          export MAKE="make -j2 --output-sync=recurse" SAGE_NUM_THREADS=2
          export SAGE_USE_CDNS=yes
          make doc-clean doc-uninstall
          ./config.status && make sagemath_doc_html
        shell: sh .ci/docker-exec-script.sh BUILD /sage {0}

      - name: Copy docs
        id: copy
        if: (success() || failure()) && steps.docbuild.outcome == 'success'
        run: |
          set -ex
          docker cp BUILD:/sage/local/share/doc/sage/html docs
          docker cp BUILD:/sage/local/share/doc/sage/index.html docs
          (cd docs && git commit -a -m 'new')
          # Wipe out chronic diffs between old doc and new doc
          (cd docs && \
           find . -name "*.html" | xargs sed -i -e '\;<script type="application/vnd\.jupyter\.widget-state+json">;,\;</script>; d')
          # Create CHANGES.html
          echo '<html>' > ./docs/CHANGES.html
          echo '<head>' >> ./docs/CHANGES.html
          echo '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/default.min.css">' >> ./docs/CHANGES.html
          echo '<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script>' >> ./docs/CHANGES.html
          echo '<script>hljs.highlightAll();</script>' >> ./docs/CHANGES.html
          cat >> ./docs/CHANGES.html << EOF
          <script>
          document.addEventListener('DOMContentLoaded', () => {
            const diffSite = 'https://pianomister.github.io/diffsite/'
            const baseDocURL = 'https://sagemath-tobias.netlify.app/'
            const diffParagraphs = document.querySelectorAll('p.diff');
            diffParagraphs.forEach(paragraph => {
              const rootURL = window.location.origin + '/';
              const docAnchor = paragraph.querySelector('a');
              const path = docAnchor.textContent; // .href doesn't work
              const anchor = document.createElement('a');
              anchor.href = diffSite + '?url1=' + rootURL + path + '&url2=' + baseDocURL + path;
              anchor.textContent = 'compare with the base';
              anchor.setAttribute('target', '_blank');
              paragraph.appendChild(anchor);
            });
          });
          </script>
          EOF
          echo '</head>' >> ./docs/CHANGES.html
          echo '<body>' >> ./docs/CHANGES.html
          (cd docs && git diff HEAD^ -- *.html; rm -rf .git) > ./docs/diff.txt
          python3 - << EOF
          import re, html
          with open('./docs/diff.txt', 'r') as f:
              diff_text = f.read()
              diff_blocks = re.split(r'^(?=diff --git)', diff_text, flags=re.MULTILINE)
              out_blocks = []
              for block in diff_blocks:
                  match = re.search(r'^diff --git a/(.*) b/\1', block, flags=re.MULTILINE)
                  if match:
                      path = 'html/' + match.group(1)
                      out_blocks.append(f'<p class="diff"><a href="{path}">{path}</a>&emsp;</p>\n<pre><code class="language-diff">' + html.escape(block).strip() + '</code></pre>')
              output_text = '\n'.join(out_blocks)
          with open('./docs/diff.html', 'w') as f:
              f.write(output_text)
          EOF
          cat ./docs/diff.html >> ./docs/CHANGES.html
          echo '</body>' >> ./docs/CHANGES.html
          echo '</html>' >>./docs/CHANGES.html
          rm ./docs/diff.txt ./docs/diff.html
          # We also need to replace the symlinks because netlify is not following them
          # CHECK IF STILL NEEDED
          ##### cp -r -L /sage/local/share/doc/sage/html ./docs
          # Zip everything for increased performance
          zip -r docs.zip docs

      - name: Upload docs
        if: (success() || failure()) && steps.copy.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: docs.zip

      - name: Build live doc
        id: buildlivedoc
        if: (success() || failure()) && steps.copy.outcome == 'success' && github.repository == 'sagemath/sage' && github.ref == 'refs/heads/develop'
        run: |
          export MAKE="make -j2 --output-sync=recurse" SAGE_NUM_THREADS=2
          export PATH="build/bin:$PATH"
          eval $(sage-print-system-package-command auto update)
          eval $(sage-print-system-package-command auto --yes --no-install-recommends install zip)
          eval $(sage-print-system-package-command auto --spkg --yes --no-install-recommends install git texlive)
          export SAGE_USE_CDNS=yes
          export SAGE_LIVE_DOC=yes
          export SAGE_JUPYTER_SERVER=binder:sagemath/sage-binder-env/dev
          make doc-clean doc-uninstall
          ./config.status && make sagemath_doc_html-no-deps sagemath_doc_pdf-no-deps
        shell: sh .ci/docker-exec-script.sh BUILD ./worktree-image {0}

      - name: Copy live doc
        id: copylivedoc
        if: (success() || failure()) && steps.buildlivedoc.outcome == 'success'
        run: |
          mkdir -p ./livedoc
          cp -r -L /sage/local/share/doc/sage/html ./livedoc
          cp -r -L /sage/local/share/doc/sage/pdf ./livedoc
          cp  /sage/local/share/doc/sage/index.html ./livedoc
          zip -r livedoc.zip livedoc
        shell: sh .ci/docker-exec-script.sh BUILD . {0}

      - name: Upload live doc
        if: (success() || failure()) && steps.copylivedoc.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: livedoc
          path: livedoc.zip

