name: CI Linux

on:
  push:
    tags:
      - '*'
  # TODO: Remove this before merging
  pull_request:
  workflow_dispatch:
    # Allow to run manually

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container:
          - ubuntu-trusty-toolchain-gcc_9
          - ubuntu-xenial-toolchain-gcc_9
          - ubuntu-bionic-gcc_8
          - ubuntu-focal
          - ubuntu-jammy
          - ubuntu-lunar
          - ubuntu-mantic
          - debian-buster-gcc_spkg
          - debian-bullseye
          - debian-bookworm
          - debian-trixie
          - debian-sid
          - linuxmint-20.1
          - linuxmint-20.2
          - linuxmint-20.3
          - linuxmint-21
          - linuxmint-21.1
          - linuxmint-21.2
          - fedora-30
          - fedora-31
          - fedora-32
          - fedora-33
          - fedora-34
          - fedora-35
          - fedora-36
          - fedora-37
          - fedora-38
          - fedora-39
          - centos-7-devtoolset-gcc_11
          - centos-stream-8-python3.9
          - centos-stream-9-python3.9
          - almalinux-8-python3.9
          - almalinux-9-python3.11
          - sheerluck/sage-on-gentoo-stage4
          - archlinux-latest
          - opensuse-15.3-gcc_11-python3.9
          - opensuse-15.4-gcc_11-python3.10
          - opensuse-15.5-gcc_11-python3.11
          - opensuse/tumbleweed
          - ubuntu-bionic-gcc_8-i386
          - debian-bullseye-i386
    container:
      image: ${{ matrix.container }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for Python version
        run: |
          echo "install_python=$(python -c 'import sys; print(sys.version_info < (3, 9))'" >> $GITHUB_ENV

      - name: Setup Python
        uses: actions/setup-python@v2
        if: ${{ env.install_python }}
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          eval $(build/bin/sage-print-system-package-command auto update)
          eval $(build/bin/sage-print-system-package-command auto --yes install $(build/bin/sage-get-system-packages auto $(build/bin/sage-package list :standard:)))

      - name: Bootstrap
        run: python -m sage_setup.autogen.interpreters src/sage/ext/interpreters
        env:
          PYTHONPATH: src

      - name: Build
        run: pip install --no-build-isolation --config-settings=builddir=builddir . -v

      - name: Test
        run: ./sage -t --all -p4 || true
        