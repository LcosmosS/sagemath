name: Build & Test using Meson

on:
  push:
    branches:
      - master
      - develop
  pull_request:
  workflow_dispatch:
    # Allow to run manually

concurrency:
  # Cancel previous runs of this workflow for the same branch
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Conda (${{ matrix.os }}, Python ${{ matrix.python }})
    runs-on: ${{ matrix.os }}-latest

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows]
        python: ['3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@v4

      - name: Merge CI fixes from sagemath/sage
        run: |
          .ci/merge-fixes.sh
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Cache conda packages
        uses: actions/cache@v4
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ hashFiles('environment-3.11-linux.yml') }}
      
      - name: Setup MSVC environment
        if: runner.os == 'windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Remove Git link.exe
        if: runner.os == 'windows'
        # It conflicts with the vs linker 
        # So we delete it, following the advice on https://github.com/ilammy/msvc-dev-cmd?tab=readme-ov-file#name-conflicts-with-shell-bash 
        run: rm -f "C:/Program Files/Git/usr/bin/link.exe"
        shell: bash

      - name: Compiler cache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ runner.os }}-meson-${{ matrix.python }}

      - name: Setup Conda environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python }}
          miniforge-version: latest
          use-mamba: true
          channels: conda-forge
          channel-priority: true
          activate-environment: sage-dev
          environment-file: environment-${{ matrix.python }}-${{ startsWith(matrix.os, 'macos') && (startsWith(runner.arch, 'ARM') && 'macos' || 'macos-x86_64') || startsWith(matrix.os, 'ubuntu') && 'linux' || 'win' }}.yml

      - name: Install additional dependencies
        shell: bash -l {0}
        if: runner.os == 'windows'
        run: |
          pip install gmpy2 cysignals

      - name: Print Conda environment
        shell: bash -l {0}
        run: |
          conda info
          conda list

      - name: Build
        shell: bash -l {0}
        run: |
          if [[ "$RUNNER_OS" != "Windows" ]]; then
            export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
            export CC="ccache $CC"
            export CXX="ccache $CXX"
          else
            export LIB="$LIB;$CONDA_PREFIX\\Library\\lib"
          fi
          pip install --no-build-isolation --config-settings=builddir=builddir -e . -v

      - name: Test
        shell: bash -l {0}
        run: |
          # We don't install sage_setup, so don't try to test it
          rm -R ./src/sage_setup/
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            # Ignore errors on Windows, for now
            ./sage -t --all -p4 || true
          else
            ./sage -t --all -p4
          fi
