name: Build & Test

on:
  pull_request:
  merge_group:
  push:
    branches:
      - master
      - develop
    # Ignore pushes on tags to prevent two uploads of codecov reports
    tags-ignore: ['**']
  workflow_dispatch:
    # Allow to run manually
    inputs:
      platform:
        description: 'Platform'
        required: true
        default: 'ubuntu-focal-standard'
      docker_tag:
        description: 'Docker tag'
        required: true
        default: 'dev'

concurrency:
  # Cancel previous runs of this workflow for the same branch
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    container: ghcr.io/sagemath/sage/sage-${{ github.event.inputs.platform || 'ubuntu-focal-standard' }}-with-targets:${{ github.event.inputs.docker_tag || 'dev'}}
    steps:
      - name: Install git (macos)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install git

      - name: Install git (linux)
        if: runner.os == 'Linux'
        run: |
          apt update
          apt install -y git
  
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Install GH CLI
        uses: dev-hanz-ops/install-gh-cli-action@v0.1.0
        if: ${{ github.event_name == 'pull_request' || github.event.repository.fork }}
        with:
          gh-cli-version: 2.32.0

      - name: Merge CI fixes from sagemath/sage
        if: ${{ github.event_name == 'pull_request' || github.event.repository.fork }}
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          .ci/merge-fixes.sh
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Add prebuilt tree as a worktree
        id: worktree
        run: |
          set -ex
          git config --global --add safe.directory $(pwd)
          .ci/retrofit-worktree.sh worktree-image /sage

      - name: Incremental build
        id: incremental
        run: |
          # Now re-bootstrap and build. The build is incremental because we were careful with the timestamps.
          ./bootstrap && make build
        working-directory: ./worktree-image
        env:
          MAKE: make -j2 --output-sync=recurse
          SAGE_NUM_THREADS: 2

      - name: Build modularized distributions
        if: always() && steps.worktree.outcome == 'success'
        run: make V=0 tox && make SAGE_CHECK=no pypi-wheels
        working-directory: ./worktree-image
        env:
          MAKE: make -j2 --output-sync=recurse
          SAGE_NUM_THREADS: 2

      - name: Static code check with pyright
        if: always() && steps.worktree.outcome == 'success'
        uses: jakebailey/pyright-action@v1
        with:
          version: 1.1.332
          # Many warnings issued by pyright are not yet helpful because there is not yet enough type information.
          no-comments: true
          working-directory: ./worktree-image
        env:
          # To avoid out of memory errors
          NODE_OPTIONS: --max-old-space-size=8192
      
      - name: Static code check with pyright (annotated)
        if: always() && steps.worktree.outcome == 'success'
        uses: jakebailey/pyright-action@v1
        with:
          version: 1.1.332
          # Issue errors
          no-comments: false
          level: error
          working-directory: ./worktree-image
        env:
          # To avoid out of memory errors
          NODE_OPTIONS: --max-old-space-size=8192

      - name: Clean (fallback to non-incremental)
        id: clean
        if: always() && steps.worktree.outcome == 'success' && steps.incremental.outcome != 'success'
        run: |
          set -ex
          ./bootstrap && make doc-clean doc-uninstall sagelib-clean && git clean -fx src/sage && ./config.status
        working-directory: ./worktree-image
        env:
          MAKE: make -j2
          SAGE_NUM_THREADS: 2

      - name: Build
        # This step is needed because building the modularized distributions installs some optional packages,
        # so the editable install of sagelib needs to build the corresponding optional extension modules.
        id: build
        if: always() && (steps.incremental.outcome == 'success' || steps.clean.outcome == 'success')
        run: |
          make build
        working-directory: ./worktree-image
        env:
          MAKE: make -j2 --output-sync=recurse
          SAGE_NUM_THREADS: 2

      # Testing

      - name: Test changed files (sage -t --new)
        if: always() && steps.build.outcome == 'success'
        run: |
          # We run tests with "sage -t --new"; this only tests the uncommitted changes.
          ./sage -t --new -p2
        working-directory: ./worktree-image
        env:
          MAKE: make -j2 --output-sync=recurse
          SAGE_NUM_THREADS: 2

      - name: Test modularized distributions
        if: always() && steps.build.outcome == 'success'
        run: make V=0 tox && make pypi-wheels-check
        working-directory: ./worktree-image
        env:
          MAKE: make -j2 --output-sync=recurse
          SAGE_NUM_THREADS: 2

      - name: Pytest
        if: contains(github.ref, 'pytest')
        run: |
          ../sage -python -m pip install coverage pytest-xdist
          ../sage -python -m coverage run -m pytest -c tox.ini --doctest-modules || true
        working-directory: ./worktree-image/src
        env:
          # Increase the length of the lines in the "short summary"
          COLUMNS: 120

      - name: Test all files (sage -t --all --long)
        if: always() && steps.build.outcome == 'success'
        run: |
          ../sage -python -m pip install coverage
          ../sage -python -m coverage run ./bin/sage-runtests --all --long -p2 --random-seed=286735480429121101562228604801325644303
        working-directory: ./worktree-image/src

      - name: Prepare coverage results
        if: always() && steps.build.outcome == 'success'
        run: |
          ./venv/bin/python3 -m coverage combine src/.coverage/
          ./venv/bin/python3 -m coverage xml
          mkdir -p coverage-report
          mv coverage.xml coverage-report/
        working-directory: ./worktree-image

      - name: Upload coverage to codecov
        if: always() && steps.build.outcome == 'success'
        uses: codecov/codecov-action@v3
        with:
          directory: ./worktree-image/coverage-report
