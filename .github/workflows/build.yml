name: Build & Test

on:
  pull_request:
  merge_group:
  push:
    branches:
      - master
      - develop
    # Ignore pushes on tags to prevent two uploads of codecov reports
    tags-ignore: ['**']
  workflow_dispatch:
    # Allow to run manually
    inputs:
      platform:
        description: 'Platform'
        required: true
        default: 'ubuntu-focal'
      packages:
        description: 'Platform'
        required: true
        default: 'standard'
      docker_tag:
        description: 'Docker tag'
        required: true
        default: 'dev'

concurrency:
  # Cancel previous runs of this workflow for the same branch
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    uses: ./.github/workflows/docker.yml
    with:
      # Build incrementally from published Docker image
      incremental: true
      free_disk_space: true
      from_docker_repository: ghcr.io/sagemath/sage/
      from_docker_target: "with-targets"
      from_docker_tag: "dev"
      docker_targets: "with-targets"
      targets: "SAGE_CHECK=no build pypi-wheels"
      tox_system_factors: >-
        ["${{ github.event.inputs.platform || 'ubuntu-focal' }}"]
      tox_packages_factors: >-
          ["${{ github.event.inputs.packages || 'standard' }}"]
      docker_push_repository: ghcr.io/${{ github.repository }}/
      image_artifact: image

  test-modularized:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        distribution: ${{ fromJson('["sagemath_categories", "sagemath_modules"]') }}
    env:
      IMAGE_ARTIFACT_NAME: image-commit-${{ github.sha }}-tox-docker-ubuntu-focal-standard
    steps:
      - name: Download image artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.IMAGE_ARTIFACT_NAME }}
      - name: Load image
        run: docker load --input image.tar.gz
      - name: Test
        run: docker run ghcr.io/${{ github.repository }}/sage-ubuntu-focal-standard-with-targets:${{ github.sha }} "make -j2 V=0 tox && make -j2 ${{ matrix.distribution }}-check"

  test-new:
    needs: [build]
    runs-on: ubuntu-latest
    container: ghcr.io/${{ github.repository }}/sage-${{ github.event.inputs.platform || 'ubuntu-focal' }}-${{ github.event.inputs.packages || 'packages' }}-with-targets:${{ github.sha }}
    steps:
      - name: Test changed files (sage -t --new)
        if: always() && steps.build.outcome == 'success'
        run: |
          # We run tests with "sage -t --new"; this only tests the uncommitted changes.
          ./sage -t --new -p2
        working-directory: ./worktree-image
        env:
          MAKE: make -j2 --output-sync=recurse
          SAGE_NUM_THREADS: 2

  test:
    needs: [build]
    runs-on: ubuntu-latest
    container: ghcr.io/${{ github.repository }}/sage-${{ github.event.inputs.platform || 'ubuntu-focal' }}-${{ github.event.inputs.packages || 'packages' }}-with-targets:${{ github.sha }}
    steps:
      - name: Pytest
        if: contains(github.ref, 'pytest')
        run: |
          ../sage -python -m pip install coverage pytest-xdist
          ../sage -python -m coverage run -m pytest -c tox.ini --doctest-modules || true
        working-directory: ./worktree-image/src
        env:
          # Increase the length of the lines in the "short summary"
          COLUMNS: 120

      - name: Test all files (sage -t --all --long)
        run: |
          ../sage -python -m pip install coverage
          ../sage -python -m coverage run ./bin/sage-runtests --all --long -p2 --random-seed=286735480429121101562228604801325644303
        working-directory: ./worktree-image/src

      - name: Prepare coverage results
        run: |
          ./venv/bin/python3 -m coverage combine src/.coverage/
          ./venv/bin/python3 -m coverage xml
          find . -name *coverage*
        working-directory: ./worktree-image

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./worktree-image/coverage.xml
