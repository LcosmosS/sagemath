name: Build & Test

on:
  pull_request:
  merge_group:
  push:
    branches:
      - master
      - develop
    # Ignore pushes on tags to prevent two uploads of codecov reports
    tags-ignore: ['**']
  workflow_dispatch:
    # Allow to run manually
    inputs:
      platform:
        description: 'Platform'
        required: true
        default: 'ubuntu-focal'
      packages:
        description: 'Platform'
        required: true
        default: 'standard'
      docker_tag:
        description: 'Docker tag'
        required: true
        default: 'dev'

concurrency:
  # Cancel previous runs of this workflow for the same branch
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changed_files:
    runs-on: ubuntu-latest
    name: List changed packages
    outputs:
      uninstall_targets: ${{ steps.build-targets.outputs.uninstall_targets }}
      build_targets:     ${{ steps.build-targets.outputs.build_targets }}
    steps:
      - uses: actions/checkout@v4
      - name: Get all packages that have changed
        id: changed-packages
        uses: tj-actions/changed-files@v38
        with:
          files_yaml: |
            configures:
              - 'build/pkgs/*/spkg-configure.m4'
            pkgs:
              - 'build/pkgs/**'
              - 'pkgs/**'
      - name: Determine targets to build
        id: build-targets
        run: |
          echo "uninstall_targets=$(echo $(for a in '' ${{ steps.changed-packages.outputs.configures_all_changed_files }}; do echo $a | sed -E 's,build/pkgs/([_.a-z0-9]*)/spkg-configure[.]m4 *,\1-uninstall,'; done | sort -u))" >> $GITHUB_OUTPUT
          echo "build_targets=$(echo $(for a in '' ${{ steps.changed-packages.outputs.pkgs_all_changed_files }}; do echo $a | sed -E 's,-,_,g;s,(build/)?pkgs/([-_.a-z0-9]*)/[^ ]* *,\2-ensure,;'; done | sort -u))" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

  build:
    uses: ./.github/workflows/docker.yml
    with:
      # Build incrementally from published Docker image
      incremental: true
      free_disk_space: true
      from_docker_repository: ghcr.io/sagemath/sage/
      from_docker_target: "with-targets"
      from_docker_tag: "dev"
      docker_targets: "with-targets"
      targets: "SAGE_CHECK=no build pypi-wheels"
      tox_system_factors: >-
        ["${{ github.event.inputs.platform || 'ubuntu-focal' }}"]
      tox_packages_factors: >-
          ["${{ github.event.inputs.packages || 'standard' }}"]
      image_artifact: image

  test-modularized:
    runs-on: ubuntu-latest
    container: ghcr.io/${{ github.repository }}/sage-${{ github.event.inputs.platform || 'ubuntu-focal' }}-${{ github.event.inputs.packages || 'packages' }}-with-targets:${{ github.sha }}
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        distribution: ${{ fromJson('["sagemath_repl", "sagemath_categories"]') }}
    env:
      IMAGE_ARTIFACT_NAME: image-commit-${{ github.sha }}-tox-docker-ubuntu-focal-standard
    steps:
      - name: Download incremental tar archive artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.IMAGE_ARTIFACT_NAME }}
      - name: Update from incremental tar archive
        run: |
          (cd / && tar xf -) < *-incremental.tar
      - name: Test
        run: |
          make -j2 V=0 tox-ensure && make -j2 ${{ matrix.distribution }}-check"
